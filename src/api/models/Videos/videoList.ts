export interface VideoListModel {
  totalPages: number;
  noOfElements: number;
  videoList: VideoListItem[];
}

export interface VideoListItem {
  isActive: boolean;
  lastModifiedDate: string;
  sourceUrl: string;
  channelId: number;
  channelUuid: string;
  horizontalVideoUrl: string;
  active: boolean;
  actualFileName: string;
  id: string;
  S3_Path: string;
  videoId: string;
  organisationID: string;
  channelID: string;
  thumbnail: string;
  previewImage: string;
  userId: string;
  name: string;
  channelType: string;
  attribute1: any[]; // You can replace 'any[]' with the actual type if known
  attribute2: any[];
  attribute3: string[];
  attribute4: any[];
  attribute5: any[];
  receipeName: string;
  itemDescription: string;
  tags: string[];
  createdDate: string;
  lastUpdateDate: string;
  userName: string;
  status: string;
  thumbNailBase64: string;
  horizontalFlag: string;
  horizontalPreviewImage: string;
  profilePic: string;
  profilePhoto: string;
  sourceURL: string;
  communityId: string;
  pageNumber: number;
  contentLimit: number;
  createdBy: string;
  channelUUID: string;
  uploaduser: string;
  profileId: string;
  uploadby: string;
  approvalNotes: string;
  approvedBy: string;
  description: string;
  page: number;
  noOfRecords: number;
  totalPages: number;
  channelIdentifier: number;
  videoIdentifier: number;
  userIdentifier: number;
  isBookmarked: boolean;
  fileType: string;
  videoUuid: string;
  horizontalVideoURL: string;
  bookMarkUserId: string;
  notificationId: string;
  videoIds: string[];
  route: string;
  contentType: string;
  videoTitle: string;
  fileKey: string;
  productUrl: string;
  pitchDeckUrl: string;
  pitchDeckFile: string;
  pitchDeckFileType: string;
  s3_Path: string;
  sourceip: string;
  sourceIp: string;
}

export interface NewVideoItem {
  active: boolean;
  actualFileName: string;
  id: string;
  S3_Path: string;
  videoId: string | null;
  organisationID: string | null;
  channelID: string | null;
  thumbnail: string;
  previewImage: string;
  userId: string;
  name: string;
  channelType: string;
  attribute1: any[]; // You can replace 'any[]' with the actual type if known
  attribute2: any[];
  attribute3: string[];
  attribute4: any[];
  attribute5: any[];
  receipeName: string | null;
  itemDescription: string | null;
  tags: string[];
  createdDate: string;
  lastUpdateDate: string;
  userName: string | null;
  status: string;
  thumbNailBase64: string | null;
  horizontalFlag: string | null;
  horizontalPreviewImage: string | null;
  profilePic: string | null;
  profilePhoto: string | null;
  sourceURL: string;
  communityId: string | null;
  pageNumber: number | null;
  contentLimit: number | null;
  createdBy: string | null;
  channelUUID: string;
  uploaduser: string;
  profileId: string;
  uploadby: string;
  approvalNotes: string | null;
  approvedBy: string | null;
  description: string | null;
  page: number | null;
  noOfRecords: number | null;
  totalPages: number | null;
  channelIdentifier: number;
  videoIdentifier: number;
  userIdentifier: number;
  isBookmarked: boolean;
  fileType: string | null;
  videoUuid: string;
  horizontalVideoURL: string | null;
  bookMarkUserId: string | null;
  notificationId: string | null;
  videoIds: string[] | null;
  route: string | null;
  contentType: string | null;
  videoTitle: string | null;
  fileKey: string | null;
  productUrl: string | null;
  pitchDeckUrl: string | null;
  pitchDeckFile: string | null;
  pitchDeckFileType: string | null;
  s3_Path: string;
  sourceip: string | null;
  sourceIp: string | null;
}

export interface VideoListRequest {
  channelUuid: string;
  page: number;
  noOfRecords: number;
  status: string;
}
